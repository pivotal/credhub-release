<%=
  ciphers = [
    'TLS_DHE_RSA_WITH_AES_128_GCM_SHA256',
    'TLS_DHE_RSA_WITH_AES_256_GCM_SHA384',
    'TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256',
    'TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384'
  ]
  # CredHubDeprecatedStartingAfter(2.1.2)
  if p('credhub.java7_tls_ciphers_enabled')
    ciphers << 'TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA'
    ciphers << 'TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA'
  end

  properties = {
    'server' => {
      'connection-timeout' => p('credhub.connection-timeout'),
      'port' => p('credhub.port'),
      'ssl' => {
        'enabled' => true,
        'enabled_protocols' => 'TLSv1.2',
        'ciphers' => ciphers.join(','),
        'key_store' => '/var/vcap/jobs/credhub/config/cacerts.jks',
        'key_password' => '${KEY_STORE_PASSWORD}',
        'key_store_password' => '${KEY_STORE_PASSWORD}',
        'key_alias' => 'credhub_tls_cert',
      }
    },
    'certificates' => {
      'concatenate_cas' => p('credhub.certificates.concatenate_cas'),
      'ca_minimum_duration_in_days' => p('credhub.certificates.ca_minimum_duration_in_days'),
      'leaf_minimum_duration_in_days' => p('credhub.certificates.leaf_minimum_duration_in_days')
    }
  }

  if p('credhub.authentication.mutual_tls.trusted_cas').length > 0
    properties['server']['ssl']['client_auth'] = 'want'
    properties['server']['ssl']['trust_store'] = '/var/vcap/jobs/credhub/config/mtls_trust_store.jks'
    properties['server']['ssl']['trust_store_password'] = '${MTLS_TRUST_STORE_PASSWORD}'
    properties['server']['ssl']['trust_store_type'] = 'JKS'
  end

  if p('credhub.backend.enable_swappable_backend')
    properties['spring'] = {
      'profiles' => {
        'active' => 'prod, remote',
      }
    }

    if p('credhub.backend.socket_file') != ""
      properties['backend'] = {
        'socket_file' => p('credhub.backend.socket_file'),
      }
    else
      raise "socket_file must be set when enable_swappable_backend is true"
    end

    if p('credhub.backend.host') != ""
      properties['backend']['host'] = p('credhub.backend.host')
    else
      raise "host must be set when enable_swappable_backend is true"
    end

    if p('credhub.backend.ca_cert') != ""
      properties['backend']['ca_cert'] = p('credhub.backend.ca_cert')
    else
      raise "ca_cert must be set when enable_swappable_backend is true"
    end

  else
    properties['spring'] = {
      'profiles' => {
        'active' => 'prod',
      }
    }
  end

  properties.to_yaml
%>
